<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Lab7.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Lab7.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Fri May 05 16:46:14 2017
<BR><P>
<H3>Maximum Stack Usage =          8 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[2]">Reset_Handler</a>
 <LI><a href="#[1a]">__user_initial_stackheap</a>
 <LI><a href="#[3a]">Copy_board</a>
 <LI><a href="#[1e]">Display_board</a>
 <LI><a href="#[3b]">ADD_enemy_s</a>
 <LI><a href="#[23]">ADD_enemy_q</a>
 <LI><a href="#[26]">update_score</a>
 <LI><a href="#[25]">s_died</a>
 <LI><a href="#[28]">q_died</a>
 <LI><a href="#[29]">p_died</a>
 <LI><a href="#[2b]">move_enemy</a>
 <LI><a href="#[8]">FIQ_Handler</a>
 <LI><a href="#[1d]">lab7</a>
 <LI><a href="#[27]">set_enemies_status</a>
 <LI><a href="#[32]">pin_connect_block_setup</a>
 <LI><a href="#[33]">gpio_direction_register</a>
 <LI><a href="#[34]">uart_init</a>
 <LI><a href="#[36]">watchdog_init</a>
 <LI><a href="#[30]">watchdog_start</a>
 <LI><a href="#[35]">interrupt_init</a>
 <LI><a href="#[3d]">timer0_speedup</a>
 <LI><a href="#[37]">timer1_start</a>
 <LI><a href="#[3c]">timers_start</a>
 <LI><a href="#[2d]">timers_restart</a>
 <LI><a href="#[39]">timer1_stop</a>
 <LI><a href="#[31]">timers_stop</a>
 <LI><a href="#[2e]">timers_pause</a>
 <LI><a href="#[2c]">read_character</a>
 <LI><a href="#[2f]">output_character</a>
 <LI><a href="#[3e]">read_string</a>
 <LI><a href="#[20]">output_string</a>
 <LI><a href="#[24]">div_and_mod</a>
 <LI><a href="#[6d]">string_conversion</a>
 <LI><a href="#[38]">display_digit_on_7_seg</a>
 <LI><a href="#[3f]">read_from_push_btns</a>
 <LI><a href="#[2a]">illuminateLEDs</a>
 <LI><a href="#[1f]">Illuminate_RGB_LED</a>
 <LI><a href="#[40]">reverse_four_bits</a>
 <LI><a href="#[21]">binary_conversion_time</a>
 <LI><a href="#[22]">binary_conversion_score</a>
 <LI><a href="#[3]">Undef_Handler</a>
 <LI><a href="#[4]">SWI_Handler</a>
 <LI><a href="#[5]">PAbt_Handler</a>
 <LI><a href="#[6]">DAbt_Handler</a>
 <LI><a href="#[7]">IRQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">Undef_Handler</a><BR>
 <LI><a href="#[4]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">SWI_Handler</a><BR>
 <LI><a href="#[5]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">PAbt_Handler</a><BR>
 <LI><a href="#[6]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">DAbt_Handler</a><BR>
 <LI><a href="#[7]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">IRQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6]">DAbt_Handler</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[8]">FIQ_Handler</a> from handler.o(handler) referenced from startup.o(RESET)
 <LI><a href="#[7]">IRQ_Handler</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[5]">PAbt_Handler</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[4]">SWI_Handler</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[3]">Undef_Handler</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[b]">__main</a> from __main.o(!!!main) referenced from startup.o(RESET)
 <LI><a href="#[a]">main</a> from lab7cwrapper.o(i.main) referenced from __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[c]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[e]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[41]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[42]"></a>__decompress</STRONG> (ARM, 92 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[43]"></a>__decompress1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[44]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[12]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via Veneer)
</UL>

<P><STRONG><a name="[45]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[46]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[47]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[48]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[49]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[4a]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[4b]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[4c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[4d]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[4e]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[4f]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[50]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[51]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[52]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[53]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[54]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[55]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[56]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[57]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[58]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[59]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[16]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via Veneer)
</UL>

<P><STRONG><a name="[5a]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[5b]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[5c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[5d]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[5e]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[5f]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[60]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[d]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[61]"></a>__rt_entry_presh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[f]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[11]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[62]"></a>__rt_entry_postsh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[13]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; exit
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[63]"></a>__rt_entry_postli_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[1c]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[15]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>

<P><STRONG><a name="[64]"></a>__rt_exit_prels_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[17]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit (via Veneer)
</UL>

<P><STRONG><a name="[1a]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[65]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[14]"></a>exit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[68]"></a>__user_libspace</STRONG> (ARM, 12 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[19]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[69]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[18]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit (via Veneer)
</UL>

<P><STRONG><a name="[6a]"></a>__I$use$semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__semihosting_library_function</STRONG> (ARM, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[a]"></a>main</STRONG> (ARM, 20 bytes, Stack size 8 bytes, lab7cwrapper.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = main
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[3a]"></a>Copy_board</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7board.o(board))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[1e]"></a>Display_board</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7board.o(board))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binary_conversion_time
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binary_conversion_score
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Illuminate_RGB_LED
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[3b]"></a>ADD_enemy_s</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7board.o(board))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[23]"></a>ADD_enemy_q</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7board.o(board))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;div_and_mod
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[26]"></a>update_score</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7board.o(board))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_died
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;q_died
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[25]"></a>s_died</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7board.o(board))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enemies_status
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_score
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[28]"></a>q_died</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7board.o(board))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enemies_status
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_score
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[29]"></a>p_died</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7board.o(board))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;illuminateLEDs
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_enemy
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[2b]"></a>move_enemy</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7board.o(board))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p_died
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;div_and_mod
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[8]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, handler.o(handler))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchdog_start
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_score
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_stop
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_restart
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_pause
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_died
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_character
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;q_died
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p_died
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_enemy
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Illuminate_RGB_LED
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_board
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>lab7</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7.o(interrupts))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_stop
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_start
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_speedup
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_connect_block_setup
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;illuminateLEDs
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_direction_register
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_digit_on_7_seg
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binary_conversion_score
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Copy_board
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_enemy_s
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_enemy_q
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchdog_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_start
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_init
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Illuminate_RGB_LED
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[27]"></a>set_enemies_status</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7.o(interrupts))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_digit_on_7_seg
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_died
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;q_died
</UL>

<P><STRONG><a name="[32]"></a>pin_connect_block_setup</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[33]"></a>gpio_direction_register</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[34]"></a>uart_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[36]"></a>watchdog_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[30]"></a>watchdog_start</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[35]"></a>interrupt_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[3d]"></a>timer0_speedup</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[37]"></a>timer1_start</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[3c]"></a>timers_start</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[2d]"></a>timers_restart</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[39]"></a>timer1_stop</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[31]"></a>timers_stop</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[2e]"></a>timers_pause</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[2c]"></a>read_character</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_string
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[2f]"></a>output_character</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binary_conversion_time
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_four_bits
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_string
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binary_conversion_score
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[3e]"></a>read_string</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_character
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
</UL>

<P><STRONG><a name="[20]"></a>output_string</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_board
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[24]"></a>div_and_mod</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binary_conversion_time
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_four_bits
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binary_conversion_score
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_enemy_q
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_enemy
</UL>

<P><STRONG><a name="[6d]"></a>string_conversion</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib), UNUSED)

<P><STRONG><a name="[38]"></a>display_digit_on_7_seg</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enemies_status
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[3f]"></a>read_from_push_btns</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_four_bits
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;illuminateLEDs
</UL>

<P><STRONG><a name="[2a]"></a>illuminateLEDs</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_four_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_from_push_btns
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p_died
</UL>

<P><STRONG><a name="[1f]"></a>Illuminate_RGB_LED</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_board
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[40]"></a>reverse_four_bits</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;div_and_mod
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_from_push_btns
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;illuminateLEDs
</UL>

<P><STRONG><a name="[21]"></a>binary_conversion_time</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;div_and_mod
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_board
</UL>

<P><STRONG><a name="[22]"></a>binary_conversion_score</STRONG> (ARM, 0 bytes, Stack size unknown bytes, library.o(lib))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;div_and_mod
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_board
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[1b]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
